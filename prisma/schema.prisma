// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String      @id @default(cuid())
    name          String?
    email         String?     @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    collection    Pokemon[]
    gameScore     GameScore[]
    gameSave      GameSave[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Pokemon {
    id    String @id @default(cuid())
    name  String @unique
    image String

    users User[]
}

model Game {
    id       String  @id @default(cuid())
    name     String
    slug     String  @unique
    language String? @default("pl-PL")
    category String

    gameScore       GameScore[]
    typingGameData  TypingGameData?
    englishGameData EnglishGameData?

    gameCategory GameCategory @relation(fields: [category], references: [name])
    gameSave     GameSave[]

    @@index([category])
}

model EnglishGameData {
    gameId String        @id
    values EnglishWord[]

    game Game @relation(fields: [gameId], references: [id])

    @@index([gameId])
}

model EnglishWord {
    id                    String  @id @default(cuid())
    name                  String  @unique
    image                 String
    englishGameDataGameId String?

    englishGameData EnglishGameData? @relation(fields: [englishGameDataGameId], references: [gameId])

    @@index([englishGameDataGameId])
}

model TypingGameData {
    gameId String @id
    value  Json

    game Game @relation(fields: [gameId], references: [id])

    @@index([gameId])
}

model GameSave {
    userId String
    gameId String
    value  String

    user User @relation(fields: [userId], references: [id])
    game Game @relation(fields: [gameId], references: [id])

    @@unique([gameId, userId])
    @@index([userId])
    @@index([gameId])
}

model GameScore {
    userId String
    gameId String
    value  Int    @default(0)

    game Game @relation(fields: [gameId], references: [id])
    user User @relation(fields: [userId], references: [id])

    @@unique([userId, gameId])
    @@index([gameId])
    @@index([userId])
}

model GameCategory {
    name String @id @unique
    game Game[]
}
