// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String      @id @default(cuid())
    name          String?
    email         String?     @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    collection    Pokemon[]
    GameSave      GameSave[]
    GameScore     GameScore[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Pokemon {
    id    String @id @default(cuid())
    name  String @unique
    image String

    users User[]
}

model EnglishQuiz {
    id     String        @id @default(cuid())
    name   String        @unique
    values EnglishWord[]
}

model EnglishWord {
    id            String       @id @default(cuid())
    name          String       @unique
    image         String
    EnglishQuiz   EnglishQuiz? @relation(fields: [englishQuizId], references: [id])
    englishQuizId String?

    @@index([englishQuizId])
}

model TypingGame {
    id       String     @id @default(cuid())
    name     String
    slug     String
    value    Json
    GameSave GameSave[]
}

model GameSave {
    TypingGame   TypingGame @relation(fields: [typingGameId], references: [id])
    typingGameId String
    User         User       @relation(fields: [userId], references: [id])
    userId       String
    value        String

    @@unique([typingGameId, userId])
    @@index([typingGameId])
    @@index([userId])
}

model Game {
    id           String       @id @default(cuid())
    name         String
    slug         String
    language     String?      @default("pl-PL")
    GameScore    GameScore[]
    GameCategory GameCategory @relation(fields: [category], references: [name])
    category     String

    @@index([category])
}

model GameScore {
    value  Int
    Game   Game   @relation(fields: [gameId], references: [id])
    gameId String
    User   User   @relation(fields: [userId], references: [id])
    userId String

    @@unique([userId, gameId])
    @@index([gameId])
    @@index([userId])
}

model GameCategory {
    name String @id @unique
    Game Game[]
}
